{"ast":null,"code":"import _objectSpread from\"C:/Users/amit.maharaj/taskmate-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddTask=_ref=>{let{taskList,setTaskList,task,setTask}=_ref;const handleSubmit=e=>{e.preventDefault();if(task.id){const date=new Date();const updateTasklist=taskList.map(todo=>todo.id===task.id?{id:task.id,name:task.name,assigned:task.assigned,time:\"\".concat(date.toLocaleTimeString()).concat(date.toLocaleDateString())}:todo);setTaskList(updateTasklist);setTask({});}else{const date=new Date();console.log(date.getTime());const newTask={id:date.getTime(),name:e.target.todo.value,assigned:e.target.assigned.value,time:\"\".concat(date.toLocaleTimeString()).concat(date.toLocaleDateString())};setTaskList([...taskList,newTask]);setTask({});}};return/*#__PURE__*/_jsx(\"section\",{className:\"addTask\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"todo\",placeholder:\"Add Task\",maxLength:\"100\",autoComplete:\"off\",value:task.name||\"\",onChange:e=>setTask(_objectSpread(_objectSpread({},task),{},{name:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"assigned\",placeholder:\"Assigned Task\",maxLength:100,autoComplete:\"off\",value:task.assigned||\"\",onChange:e=>setTask(_objectSpread(_objectSpread({},task),{},{assigned:e.target.value}))}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",children:[task.id?\"Update Task\":\"Add Task\",\" \"]})]})},task.id);};export default AddTask;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AddTask","_ref","taskList","setTaskList","task","setTask","handleSubmit","e","preventDefault","id","date","Date","updateTasklist","map","todo","name","assigned","time","concat","toLocaleTimeString","toLocaleDateString","console","log","getTime","newTask","target","value","className","children","onSubmit","type","placeholder","maxLength","autoComplete","onChange","_objectSpread"],"sources":["C:/Users/amit.maharaj/taskmate-react/src/components/AddTask.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddTask = ({ taskList, setTaskList, task, setTask }) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (task.id) {\r\n      const date = new Date();\r\n      const updateTasklist = taskList.map((todo) =>\r\n        todo.id === task.id\r\n          ? {\r\n              id: task.id,\r\n              name: task.name,\r\n              assigned: task.assigned,\r\n              time: `${date.toLocaleTimeString()}${date.toLocaleDateString()}`,\r\n            }\r\n          : todo\r\n      );\r\n      setTaskList(updateTasklist);\r\n      setTask({});\r\n    } else {\r\n      const date = new Date();\r\n      console.log(date.getTime());\r\n      const newTask = {\r\n        id: date.getTime(),\r\n        name: e.target.todo.value,\r\n        assigned: e.target.assigned.value,\r\n        time: `${date.toLocaleTimeString()}${date.toLocaleDateString()}`,\r\n      };\r\n\r\n      setTaskList([...taskList, newTask]);\r\n      setTask({});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"addTask\" key={task.id}>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          placeholder=\"Add Task\"\r\n          maxLength=\"100\"\r\n          autoComplete=\"off\"\r\n          value={task.name || \"\"}\r\n          onChange={(e) => setTask({ ...task, name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"assigned\"\r\n          placeholder=\"Assigned Task\"\r\n          maxLength={100}\r\n          autoComplete=\"off\"\r\n          value={task.assigned || \"\"}\r\n          onChange={(e) => setTask({ ...task, assigned: e.target.value })}\r\n        />\r\n\r\n        <button type=\"submit\">{task.id ? \"Update Task\" : \"Add Task\"} </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n"],"mappings":"yHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAA8C,IAA7C,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAAJ,IAAA,CACvD,KAAM,CAAAK,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAIJ,IAAI,CAACK,EAAE,CAAE,CACX,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvB,KAAM,CAAAC,cAAc,CAAGV,QAAQ,CAACW,GAAG,CAAEC,IAAI,EACvCA,IAAI,CAACL,EAAE,GAAKL,IAAI,CAACK,EAAE,CACf,CACEA,EAAE,CAAEL,IAAI,CAACK,EAAE,CACXM,IAAI,CAAEX,IAAI,CAACW,IAAI,CACfC,QAAQ,CAAEZ,IAAI,CAACY,QAAQ,CACvBC,IAAI,IAAAC,MAAA,CAAKR,IAAI,CAACS,kBAAkB,CAAC,CAAC,EAAAD,MAAA,CAAGR,IAAI,CAACU,kBAAkB,CAAC,CAAC,CAChE,CAAC,CACDN,IACN,CAAC,CACDX,WAAW,CAACS,cAAc,CAAC,CAC3BP,OAAO,CAAC,CAAC,CAAC,CAAC,CACb,CAAC,IAAM,CACL,KAAM,CAAAK,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvBU,OAAO,CAACC,GAAG,CAACZ,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAAC,OAAO,CAAG,CACdf,EAAE,CAAEC,IAAI,CAACa,OAAO,CAAC,CAAC,CAClBR,IAAI,CAAER,CAAC,CAACkB,MAAM,CAACX,IAAI,CAACY,KAAK,CACzBV,QAAQ,CAAET,CAAC,CAACkB,MAAM,CAACT,QAAQ,CAACU,KAAK,CACjCT,IAAI,IAAAC,MAAA,CAAKR,IAAI,CAACS,kBAAkB,CAAC,CAAC,EAAAD,MAAA,CAAGR,IAAI,CAACU,kBAAkB,CAAC,CAAC,CAChE,CAAC,CAEDjB,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEsB,OAAO,CAAC,CAAC,CACnCnB,OAAO,CAAC,CAAC,CAAC,CAAC,CACb,CACF,CAAC,CAED,mBACER,IAAA,YAAS8B,SAAS,CAAC,SAAS,CAAAC,QAAA,cAC1B7B,KAAA,SAAM8B,QAAQ,CAAEvB,YAAa,CAAAsB,QAAA,eAC3B/B,IAAA,UACEiC,IAAI,CAAC,MAAM,CACXf,IAAI,CAAC,MAAM,CACXgB,WAAW,CAAC,UAAU,CACtBC,SAAS,CAAC,KAAK,CACfC,YAAY,CAAC,KAAK,CAClBP,KAAK,CAAEtB,IAAI,CAACW,IAAI,EAAI,EAAG,CACvBmB,QAAQ,CAAG3B,CAAC,EAAKF,OAAO,CAAA8B,aAAA,CAAAA,aAAA,IAAM/B,IAAI,MAAEW,IAAI,CAAER,CAAC,CAACkB,MAAM,CAACC,KAAK,EAAE,CAAE,CAC7D,CAAC,cACF7B,IAAA,UACEiC,IAAI,CAAC,MAAM,CACXf,IAAI,CAAC,UAAU,CACfgB,WAAW,CAAC,eAAe,CAC3BC,SAAS,CAAE,GAAI,CACfC,YAAY,CAAC,KAAK,CAClBP,KAAK,CAAEtB,IAAI,CAACY,QAAQ,EAAI,EAAG,CAC3BkB,QAAQ,CAAG3B,CAAC,EAAKF,OAAO,CAAA8B,aAAA,CAAAA,aAAA,IAAM/B,IAAI,MAAEY,QAAQ,CAAET,CAAC,CAACkB,MAAM,CAACC,KAAK,EAAE,CAAE,CACjE,CAAC,cAEF3B,KAAA,WAAQ+B,IAAI,CAAC,QAAQ,CAAAF,QAAA,EAAExB,IAAI,CAACK,EAAE,CAAG,aAAa,CAAG,UAAU,CAAC,GAAC,EAAQ,CAAC,EAClE,CAAC,EAtByBL,IAAI,CAACK,EAuB9B,CAAC,CAEd,CAAC,CAED,cAAe,CAAAT,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}